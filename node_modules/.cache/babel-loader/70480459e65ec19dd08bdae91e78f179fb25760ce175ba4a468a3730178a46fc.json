{"ast":null,"code":"var _jsxFileName = \"/Users/aman/Developer/aztec/src/components/ParticleNetwork.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport './ParticleNetwork.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticleNetwork = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const animationRef = useRef(null);\n  const mouseRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const [isHovering, setIsHovering] = useState(false);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    let canvasWidth = 0;\n    let canvasHeight = 0;\n\n    // Set canvas size\n    const resizeCanvas = () => {\n      const container = canvas.parentElement;\n      const rect = container.getBoundingClientRect();\n      canvasWidth = rect.width;\n      canvasHeight = rect.height;\n\n      // Set actual canvas size in memory (scaled for high DPI)\n      canvas.width = canvasWidth * window.devicePixelRatio;\n      canvas.height = canvasHeight * window.devicePixelRatio;\n\n      // Scale the drawing context so everything draws at the correct size\n      ctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n\n      // Set the CSS size to fill container completely\n      canvas.style.width = canvasWidth + 'px';\n      canvas.style.height = canvasHeight + 'px';\n\n      // Redistribute particles when canvas resizes\n      particles.forEach(particle => {\n        if (particle.x > canvasWidth) particle.x = Math.random() * canvasWidth;\n        if (particle.y > canvasHeight) particle.y = Math.random() * canvasHeight;\n      });\n    };\n\n    // Particle system\n    const particles = [];\n    const particleCount = 60;\n    const maxDistance = 150;\n    const mouseRadius = 120;\n    class Particle {\n      constructor() {\n        this.hue = Math.random() * 60 + 200; // Blue to purple range\n        this.reset();\n      }\n      reset() {\n        // Ensure particles use current canvas dimensions\n        this.x = Math.random() * Math.max(canvasWidth, 100);\n        this.y = Math.random() * Math.max(canvasHeight, 100);\n        this.vx = (Math.random() - 0.5) * 0.8;\n        this.vy = (Math.random() - 0.5) * 0.8;\n        this.radius = Math.random() * 3 + 1;\n        this.originalRadius = this.radius;\n        this.opacity = Math.random() * 0.6 + 0.4;\n      }\n      update() {\n        this.x += this.vx;\n        this.y += this.vy;\n\n        // Bounce off edges with some randomness\n        if (this.x < 0 || this.x > canvasWidth) {\n          this.vx *= -0.8;\n          this.vx += (Math.random() - 0.5) * 0.2;\n        }\n        if (this.y < 0 || this.y > canvasHeight) {\n          this.vy *= -0.8;\n          this.vy += (Math.random() - 0.5) * 0.2;\n        }\n\n        // Keep particles in bounds\n        this.x = Math.max(0, Math.min(canvasWidth, this.x));\n        this.y = Math.max(0, Math.min(canvasHeight, this.y));\n\n        // Mouse interaction\n        const dx = mouseRef.current.x - this.x;\n        const dy = mouseRef.current.y - this.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        if (distance < mouseRadius && isHovering) {\n          // Attract to mouse with varying force\n          const force = (mouseRadius - distance) / mouseRadius;\n          this.vx += dx / distance * force * 0.02;\n          this.vy += dy / distance * force * 0.02;\n          this.radius = this.originalRadius * (1 + force * 0.5);\n          this.opacity = Math.min(1, this.opacity + force * 0.3);\n        } else {\n          this.radius = this.originalRadius;\n          this.opacity = Math.max(0.4, this.opacity - 0.01);\n        }\n\n        // Add some drift\n        this.vx += (Math.random() - 0.5) * 0.01;\n        this.vy += (Math.random() - 0.5) * 0.01;\n\n        // Damping\n        this.vx *= 0.995;\n        this.vy *= 0.995;\n      }\n      draw() {\n        // Main particle\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n        ctx.fillStyle = `hsla(${this.hue}, 70%, 60%, ${this.opacity})`;\n        ctx.fill();\n\n        // Glow effect\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.radius * 2, 0, Math.PI * 2);\n        ctx.fillStyle = `hsla(${this.hue}, 70%, 60%, ${this.opacity * 0.1})`;\n        ctx.fill();\n      }\n    }\n\n    // Initialize particles\n    const initParticles = () => {\n      particles.length = 0;\n      for (let i = 0; i < particleCount; i++) {\n        particles.push(new Particle());\n      }\n    };\n\n    // Animation loop\n    const animate = () => {\n      if (canvasWidth <= 0 || canvasHeight <= 0) {\n        animationRef.current = requestAnimationFrame(animate);\n        return;\n      }\n\n      // Clear canvas with trailing effect\n      ctx.fillStyle = 'rgba(15, 15, 35, 0.05)';\n      ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n\n      // Update and draw particles\n      particles.forEach(particle => {\n        particle.update();\n        particle.draw();\n      });\n\n      // Draw connections\n      for (let i = 0; i < particles.length; i++) {\n        for (let j = i + 1; j < particles.length; j++) {\n          const dx = particles[i].x - particles[j].x;\n          const dy = particles[i].y - particles[j].y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          if (distance < maxDistance) {\n            const opacity = (1 - distance / maxDistance) * 0.4;\n            const gradient = ctx.createLinearGradient(particles[i].x, particles[i].y, particles[j].x, particles[j].y);\n            gradient.addColorStop(0, `hsla(${particles[i].hue}, 70%, 60%, ${opacity})`);\n            gradient.addColorStop(1, `hsla(${particles[j].hue}, 70%, 60%, ${opacity})`);\n            ctx.beginPath();\n            ctx.moveTo(particles[i].x, particles[i].y);\n            ctx.lineTo(particles[j].x, particles[j].y);\n            ctx.strokeStyle = gradient;\n            ctx.lineWidth = 1;\n            ctx.stroke();\n          }\n        }\n      }\n\n      // Draw mouse connections\n      if (isHovering) {\n        particles.forEach(particle => {\n          const dx = mouseRef.current.x - particle.x;\n          const dy = mouseRef.current.y - particle.y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          if (distance < mouseRadius) {\n            const opacity = (1 - distance / mouseRadius) * 0.6;\n            ctx.beginPath();\n            ctx.moveTo(particle.x, particle.y);\n            ctx.lineTo(mouseRef.current.x, mouseRef.current.y);\n            ctx.strokeStyle = `hsla(280, 70%, 60%, ${opacity})`;\n            ctx.lineWidth = 2;\n            ctx.stroke();\n          }\n        });\n\n        // Draw mouse node with pulsing effect\n        const time = Date.now() * 0.005;\n        const pulseRadius = 8 + Math.sin(time) * 3;\n        ctx.beginPath();\n        ctx.arc(mouseRef.current.x, mouseRef.current.y, pulseRadius, 0, Math.PI * 2);\n        ctx.fillStyle = 'hsla(280, 70%, 60%, 0.8)';\n        ctx.fill();\n\n        // Outer glow\n        ctx.beginPath();\n        ctx.arc(mouseRef.current.x, mouseRef.current.y, pulseRadius * 2, 0, Math.PI * 2);\n        ctx.fillStyle = 'hsla(280, 70%, 60%, 0.2)';\n        ctx.fill();\n      }\n      animationRef.current = requestAnimationFrame(animate);\n    };\n\n    // Setup with proper timing\n    const setup = () => {\n      resizeCanvas();\n      initParticles();\n      animate();\n    };\n\n    // Use ResizeObserver for better container size detection\n    const resizeObserver = new ResizeObserver(() => {\n      resizeCanvas();\n    });\n    resizeObserver.observe(canvas.parentElement);\n\n    // Initial setup with delay\n    const timeoutId = setTimeout(setup, 100);\n\n    // Mouse event handlers\n    const handleMouseMove = e => {\n      const rect = canvas.getBoundingClientRect();\n      mouseRef.current.x = e.clientX - rect.left;\n      mouseRef.current.y = e.clientY - rect.top;\n    };\n    const handleMouseEnter = () => setIsHovering(true);\n    const handleMouseLeave = () => setIsHovering(false);\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('mouseenter', handleMouseEnter);\n    canvas.addEventListener('mouseleave', handleMouseLeave);\n    return () => {\n      clearTimeout(timeoutId);\n      resizeObserver.disconnect();\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('mouseenter', handleMouseEnter);\n      canvas.removeEventListener('mouseleave', handleMouseLeave);\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [isHovering]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"particle-network\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"particle-canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n};\n_s(ParticleNetwork, \"dRmvbZR+xEnZ2DDwQtwUUp/1Bcs=\");\n_c = ParticleNetwork;\nexport default ParticleNetwork;\nvar _c;\n$RefreshReg$(_c, \"ParticleNetwork\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","ParticleNetwork","_s","canvasRef","animationRef","mouseRef","x","y","isHovering","setIsHovering","canvas","current","ctx","getContext","canvasWidth","canvasHeight","resizeCanvas","container","parentElement","rect","getBoundingClientRect","width","height","window","devicePixelRatio","scale","style","particles","forEach","particle","Math","random","particleCount","maxDistance","mouseRadius","Particle","constructor","hue","reset","max","vx","vy","radius","originalRadius","opacity","update","min","dx","dy","distance","sqrt","force","draw","beginPath","arc","PI","fillStyle","fill","initParticles","length","i","push","animate","requestAnimationFrame","fillRect","j","gradient","createLinearGradient","addColorStop","moveTo","lineTo","strokeStyle","lineWidth","stroke","time","Date","now","pulseRadius","sin","setup","resizeObserver","ResizeObserver","observe","timeoutId","setTimeout","handleMouseMove","e","clientX","left","clientY","top","handleMouseEnter","handleMouseLeave","addEventListener","clearTimeout","disconnect","removeEventListener","cancelAnimationFrame","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aman/Developer/aztec/src/components/ParticleNetwork.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport './ParticleNetwork.css';\n\nconst ParticleNetwork = () => {\n  const canvasRef = useRef(null);\n  const animationRef = useRef(null);\n  const mouseRef = useRef({ x: 0, y: 0 });\n  const [isHovering, setIsHovering] = useState(false);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    const ctx = canvas.getContext('2d');\n    let canvasWidth = 0;\n    let canvasHeight = 0;\n    \n    // Set canvas size\n    const resizeCanvas = () => {\n      const container = canvas.parentElement;\n      const rect = container.getBoundingClientRect();\n      \n      canvasWidth = rect.width;\n      canvasHeight = rect.height;\n      \n      // Set actual canvas size in memory (scaled for high DPI)\n      canvas.width = canvasWidth * window.devicePixelRatio;\n      canvas.height = canvasHeight * window.devicePixelRatio;\n      \n      // Scale the drawing context so everything draws at the correct size\n      ctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n      \n      // Set the CSS size to fill container completely\n      canvas.style.width = canvasWidth + 'px';\n      canvas.style.height = canvasHeight + 'px';\n      \n      // Redistribute particles when canvas resizes\n      particles.forEach(particle => {\n        if (particle.x > canvasWidth) particle.x = Math.random() * canvasWidth;\n        if (particle.y > canvasHeight) particle.y = Math.random() * canvasHeight;\n      });\n    };\n\n    // Particle system\n    const particles = [];\n    const particleCount = 60;\n    const maxDistance = 150;\n    const mouseRadius = 120;\n\n    class Particle {\n      constructor() {\n        this.hue = Math.random() * 60 + 200; // Blue to purple range\n        this.reset();\n      }\n\n      reset() {\n        // Ensure particles use current canvas dimensions\n        this.x = Math.random() * Math.max(canvasWidth, 100);\n        this.y = Math.random() * Math.max(canvasHeight, 100);\n        this.vx = (Math.random() - 0.5) * 0.8;\n        this.vy = (Math.random() - 0.5) * 0.8;\n        this.radius = Math.random() * 3 + 1;\n        this.originalRadius = this.radius;\n        this.opacity = Math.random() * 0.6 + 0.4;\n      }\n\n      update() {\n        this.x += this.vx;\n        this.y += this.vy;\n\n        // Bounce off edges with some randomness\n        if (this.x < 0 || this.x > canvasWidth) {\n          this.vx *= -0.8;\n          this.vx += (Math.random() - 0.5) * 0.2;\n        }\n        if (this.y < 0 || this.y > canvasHeight) {\n          this.vy *= -0.8;\n          this.vy += (Math.random() - 0.5) * 0.2;\n        }\n\n        // Keep particles in bounds\n        this.x = Math.max(0, Math.min(canvasWidth, this.x));\n        this.y = Math.max(0, Math.min(canvasHeight, this.y));\n\n        // Mouse interaction\n        const dx = mouseRef.current.x - this.x;\n        const dy = mouseRef.current.y - this.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n\n        if (distance < mouseRadius && isHovering) {\n          // Attract to mouse with varying force\n          const force = (mouseRadius - distance) / mouseRadius;\n          this.vx += (dx / distance) * force * 0.02;\n          this.vy += (dy / distance) * force * 0.02;\n          this.radius = this.originalRadius * (1 + force * 0.5);\n          this.opacity = Math.min(1, this.opacity + force * 0.3);\n        } else {\n          this.radius = this.originalRadius;\n          this.opacity = Math.max(0.4, this.opacity - 0.01);\n        }\n\n        // Add some drift\n        this.vx += (Math.random() - 0.5) * 0.01;\n        this.vy += (Math.random() - 0.5) * 0.01;\n\n        // Damping\n        this.vx *= 0.995;\n        this.vy *= 0.995;\n      }\n\n      draw() {\n        // Main particle\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n        ctx.fillStyle = `hsla(${this.hue}, 70%, 60%, ${this.opacity})`;\n        ctx.fill();\n\n        // Glow effect\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.radius * 2, 0, Math.PI * 2);\n        ctx.fillStyle = `hsla(${this.hue}, 70%, 60%, ${this.opacity * 0.1})`;\n        ctx.fill();\n      }\n    }\n\n    // Initialize particles\n    const initParticles = () => {\n      particles.length = 0;\n      for (let i = 0; i < particleCount; i++) {\n        particles.push(new Particle());\n      }\n    };\n\n    // Animation loop\n    const animate = () => {\n      if (canvasWidth <= 0 || canvasHeight <= 0) {\n        animationRef.current = requestAnimationFrame(animate);\n        return;\n      }\n      \n      // Clear canvas with trailing effect\n      ctx.fillStyle = 'rgba(15, 15, 35, 0.05)';\n      ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n\n      // Update and draw particles\n      particles.forEach(particle => {\n        particle.update();\n        particle.draw();\n      });\n\n      // Draw connections\n      for (let i = 0; i < particles.length; i++) {\n        for (let j = i + 1; j < particles.length; j++) {\n          const dx = particles[i].x - particles[j].x;\n          const dy = particles[i].y - particles[j].y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n\n          if (distance < maxDistance) {\n            const opacity = (1 - distance / maxDistance) * 0.4;\n            const gradient = ctx.createLinearGradient(\n              particles[i].x, particles[i].y,\n              particles[j].x, particles[j].y\n            );\n            gradient.addColorStop(0, `hsla(${particles[i].hue}, 70%, 60%, ${opacity})`);\n            gradient.addColorStop(1, `hsla(${particles[j].hue}, 70%, 60%, ${opacity})`);\n            \n            ctx.beginPath();\n            ctx.moveTo(particles[i].x, particles[i].y);\n            ctx.lineTo(particles[j].x, particles[j].y);\n            ctx.strokeStyle = gradient;\n            ctx.lineWidth = 1;\n            ctx.stroke();\n          }\n        }\n      }\n\n      // Draw mouse connections\n      if (isHovering) {\n        particles.forEach(particle => {\n          const dx = mouseRef.current.x - particle.x;\n          const dy = mouseRef.current.y - particle.y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n\n          if (distance < mouseRadius) {\n            const opacity = (1 - distance / mouseRadius) * 0.6;\n            ctx.beginPath();\n            ctx.moveTo(particle.x, particle.y);\n            ctx.lineTo(mouseRef.current.x, mouseRef.current.y);\n            ctx.strokeStyle = `hsla(280, 70%, 60%, ${opacity})`;\n            ctx.lineWidth = 2;\n            ctx.stroke();\n          }\n        });\n\n        // Draw mouse node with pulsing effect\n        const time = Date.now() * 0.005;\n        const pulseRadius = 8 + Math.sin(time) * 3;\n        ctx.beginPath();\n        ctx.arc(mouseRef.current.x, mouseRef.current.y, pulseRadius, 0, Math.PI * 2);\n        ctx.fillStyle = 'hsla(280, 70%, 60%, 0.8)';\n        ctx.fill();\n        \n        // Outer glow\n        ctx.beginPath();\n        ctx.arc(mouseRef.current.x, mouseRef.current.y, pulseRadius * 2, 0, Math.PI * 2);\n        ctx.fillStyle = 'hsla(280, 70%, 60%, 0.2)';\n        ctx.fill();\n      }\n\n      animationRef.current = requestAnimationFrame(animate);\n    };\n\n    // Setup with proper timing\n    const setup = () => {\n      resizeCanvas();\n      initParticles();\n      animate();\n    };\n\n    // Use ResizeObserver for better container size detection\n    const resizeObserver = new ResizeObserver(() => {\n      resizeCanvas();\n    });\n    \n    resizeObserver.observe(canvas.parentElement);\n\n    // Initial setup with delay\n    const timeoutId = setTimeout(setup, 100);\n\n    // Mouse event handlers\n    const handleMouseMove = (e) => {\n      const rect = canvas.getBoundingClientRect();\n      mouseRef.current.x = e.clientX - rect.left;\n      mouseRef.current.y = e.clientY - rect.top;\n    };\n\n    const handleMouseEnter = () => setIsHovering(true);\n    const handleMouseLeave = () => setIsHovering(false);\n\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('mouseenter', handleMouseEnter);\n    canvas.addEventListener('mouseleave', handleMouseLeave);\n\n    return () => {\n      clearTimeout(timeoutId);\n      resizeObserver.disconnect();\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('mouseenter', handleMouseEnter);\n      canvas.removeEventListener('mouseleave', handleMouseLeave);\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [isHovering]);\n\n  return (\n    <div className=\"particle-network\">\n      <canvas ref={canvasRef} className=\"particle-canvas\" />\n    </div>\n  );\n};\n\nexport default ParticleNetwork; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}