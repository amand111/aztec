{"ast":null,"code":"var _jsxFileName = \"/Users/aman/Developer/aztec/src/components/ParticleNetwork.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport './ParticleNetwork.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticleNetwork = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const animationRef = useRef(null);\n  const mouseRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const [isHovering, setIsHovering] = useState(false);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Set canvas size\n    const resizeCanvas = () => {\n      canvas.width = canvas.offsetWidth * window.devicePixelRatio;\n      canvas.height = canvas.offsetHeight * window.devicePixelRatio;\n      ctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n    };\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n\n    // Particle system\n    const particles = [];\n    const particleCount = 50;\n    const maxDistance = 120;\n    const mouseRadius = 100;\n    class Particle {\n      constructor() {\n        this.x = Math.random() * canvas.offsetWidth;\n        this.y = Math.random() * canvas.offsetHeight;\n        this.vx = (Math.random() - 0.5) * 0.5;\n        this.vy = (Math.random() - 0.5) * 0.5;\n        this.radius = Math.random() * 2 + 1;\n        this.originalRadius = this.radius;\n        this.opacity = Math.random() * 0.5 + 0.5;\n      }\n      update() {\n        this.x += this.vx;\n        this.y += this.vy;\n\n        // Bounce off edges\n        if (this.x < 0 || this.x > canvas.offsetWidth) this.vx *= -1;\n        if (this.y < 0 || this.y > canvas.offsetHeight) this.vy *= -1;\n\n        // Keep particles in bounds\n        this.x = Math.max(0, Math.min(canvas.offsetWidth, this.x));\n        this.y = Math.max(0, Math.min(canvas.offsetHeight, this.y));\n\n        // Mouse interaction\n        const dx = mouseRef.current.x - this.x;\n        const dy = mouseRef.current.y - this.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        if (distance < mouseRadius && isHovering) {\n          // Attract to mouse\n          const force = (mouseRadius - distance) / mouseRadius;\n          this.vx += dx / distance * force * 0.01;\n          this.vy += dy / distance * force * 0.01;\n          this.radius = this.originalRadius * (1 + force);\n        } else {\n          this.radius = this.originalRadius;\n        }\n\n        // Damping\n        this.vx *= 0.99;\n        this.vy *= 0.99;\n      }\n      draw() {\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n        ctx.fillStyle = `rgba(102, 126, 234, ${this.opacity})`;\n        ctx.fill();\n\n        // Add glow effect\n        ctx.shadowColor = '#667eea';\n        ctx.shadowBlur = 10;\n        ctx.fill();\n        ctx.shadowBlur = 0;\n      }\n    }\n\n    // Initialize particles\n    for (let i = 0; i < particleCount; i++) {\n      particles.push(new Particle());\n    }\n\n    // Animation loop\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.offsetWidth, canvas.offsetHeight);\n\n      // Update and draw particles\n      particles.forEach(particle => {\n        particle.update();\n        particle.draw();\n      });\n\n      // Draw connections\n      for (let i = 0; i < particles.length; i++) {\n        for (let j = i + 1; j < particles.length; j++) {\n          const dx = particles[i].x - particles[j].x;\n          const dy = particles[i].y - particles[j].y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          if (distance < maxDistance) {\n            const opacity = (1 - distance / maxDistance) * 0.3;\n            ctx.beginPath();\n            ctx.moveTo(particles[i].x, particles[i].y);\n            ctx.lineTo(particles[j].x, particles[j].y);\n            ctx.strokeStyle = `rgba(102, 126, 234, ${opacity})`;\n            ctx.lineWidth = 1;\n            ctx.stroke();\n          }\n        }\n      }\n\n      // Draw mouse connections\n      if (isHovering) {\n        particles.forEach(particle => {\n          const dx = mouseRef.current.x - particle.x;\n          const dy = mouseRef.current.y - particle.y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          if (distance < mouseRadius) {\n            const opacity = (1 - distance / mouseRadius) * 0.5;\n            ctx.beginPath();\n            ctx.moveTo(particle.x, particle.y);\n            ctx.lineTo(mouseRef.current.x, mouseRef.current.y);\n            ctx.strokeStyle = `rgba(118, 75, 162, ${opacity})`;\n            ctx.lineWidth = 2;\n            ctx.stroke();\n          }\n        });\n\n        // Draw mouse node\n        ctx.beginPath();\n        ctx.arc(mouseRef.current.x, mouseRef.current.y, 5, 0, Math.PI * 2);\n        ctx.fillStyle = 'rgba(118, 75, 162, 0.8)';\n        ctx.fill();\n        ctx.shadowColor = '#764ba2';\n        ctx.shadowBlur = 15;\n        ctx.fill();\n        ctx.shadowBlur = 0;\n      }\n      animationRef.current = requestAnimationFrame(animate);\n    };\n    animate();\n\n    // Mouse event handlers\n    const handleMouseMove = e => {\n      const rect = canvas.getBoundingClientRect();\n      mouseRef.current.x = e.clientX - rect.left;\n      mouseRef.current.y = e.clientY - rect.top;\n    };\n    const handleMouseEnter = () => setIsHovering(true);\n    const handleMouseLeave = () => setIsHovering(false);\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('mouseenter', handleMouseEnter);\n    canvas.addEventListener('mouseleave', handleMouseLeave);\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('mouseenter', handleMouseEnter);\n      canvas.removeEventListener('mouseleave', handleMouseLeave);\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [isHovering]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"particle-network\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"particle-canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"network-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"network-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: \"50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Nodes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: \"\\u221E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Connections\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"network-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Interactive Neural Network\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Hover to interact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n_s(ParticleNetwork, \"dRmvbZR+xEnZ2DDwQtwUUp/1Bcs=\");\n_c = ParticleNetwork;\nexport default ParticleNetwork;\nvar _c;\n$RefreshReg$(_c, \"ParticleNetwork\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","ParticleNetwork","_s","canvasRef","animationRef","mouseRef","x","y","isHovering","setIsHovering","canvas","current","ctx","getContext","resizeCanvas","width","offsetWidth","window","devicePixelRatio","height","offsetHeight","scale","addEventListener","particles","particleCount","maxDistance","mouseRadius","Particle","constructor","Math","random","vx","vy","radius","originalRadius","opacity","update","max","min","dx","dy","distance","sqrt","force","draw","beginPath","arc","PI","fillStyle","fill","shadowColor","shadowBlur","i","push","animate","clearRect","forEach","particle","length","j","moveTo","lineTo","strokeStyle","lineWidth","stroke","requestAnimationFrame","handleMouseMove","e","rect","getBoundingClientRect","clientX","left","clientY","top","handleMouseEnter","handleMouseLeave","removeEventListener","cancelAnimationFrame","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aman/Developer/aztec/src/components/ParticleNetwork.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport './ParticleNetwork.css';\n\nconst ParticleNetwork = () => {\n  const canvasRef = useRef(null);\n  const animationRef = useRef(null);\n  const mouseRef = useRef({ x: 0, y: 0 });\n  const [isHovering, setIsHovering] = useState(false);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    \n    // Set canvas size\n    const resizeCanvas = () => {\n      canvas.width = canvas.offsetWidth * window.devicePixelRatio;\n      canvas.height = canvas.offsetHeight * window.devicePixelRatio;\n      ctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n    };\n    \n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n\n    // Particle system\n    const particles = [];\n    const particleCount = 50;\n    const maxDistance = 120;\n    const mouseRadius = 100;\n\n    class Particle {\n      constructor() {\n        this.x = Math.random() * canvas.offsetWidth;\n        this.y = Math.random() * canvas.offsetHeight;\n        this.vx = (Math.random() - 0.5) * 0.5;\n        this.vy = (Math.random() - 0.5) * 0.5;\n        this.radius = Math.random() * 2 + 1;\n        this.originalRadius = this.radius;\n        this.opacity = Math.random() * 0.5 + 0.5;\n      }\n\n      update() {\n        this.x += this.vx;\n        this.y += this.vy;\n\n        // Bounce off edges\n        if (this.x < 0 || this.x > canvas.offsetWidth) this.vx *= -1;\n        if (this.y < 0 || this.y > canvas.offsetHeight) this.vy *= -1;\n\n        // Keep particles in bounds\n        this.x = Math.max(0, Math.min(canvas.offsetWidth, this.x));\n        this.y = Math.max(0, Math.min(canvas.offsetHeight, this.y));\n\n        // Mouse interaction\n        const dx = mouseRef.current.x - this.x;\n        const dy = mouseRef.current.y - this.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n\n        if (distance < mouseRadius && isHovering) {\n          // Attract to mouse\n          const force = (mouseRadius - distance) / mouseRadius;\n          this.vx += (dx / distance) * force * 0.01;\n          this.vy += (dy / distance) * force * 0.01;\n          this.radius = this.originalRadius * (1 + force);\n        } else {\n          this.radius = this.originalRadius;\n        }\n\n        // Damping\n        this.vx *= 0.99;\n        this.vy *= 0.99;\n      }\n\n      draw() {\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n        ctx.fillStyle = `rgba(102, 126, 234, ${this.opacity})`;\n        ctx.fill();\n\n        // Add glow effect\n        ctx.shadowColor = '#667eea';\n        ctx.shadowBlur = 10;\n        ctx.fill();\n        ctx.shadowBlur = 0;\n      }\n    }\n\n    // Initialize particles\n    for (let i = 0; i < particleCount; i++) {\n      particles.push(new Particle());\n    }\n\n    // Animation loop\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.offsetWidth, canvas.offsetHeight);\n\n      // Update and draw particles\n      particles.forEach(particle => {\n        particle.update();\n        particle.draw();\n      });\n\n      // Draw connections\n      for (let i = 0; i < particles.length; i++) {\n        for (let j = i + 1; j < particles.length; j++) {\n          const dx = particles[i].x - particles[j].x;\n          const dy = particles[i].y - particles[j].y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n\n          if (distance < maxDistance) {\n            const opacity = (1 - distance / maxDistance) * 0.3;\n            ctx.beginPath();\n            ctx.moveTo(particles[i].x, particles[i].y);\n            ctx.lineTo(particles[j].x, particles[j].y);\n            ctx.strokeStyle = `rgba(102, 126, 234, ${opacity})`;\n            ctx.lineWidth = 1;\n            ctx.stroke();\n          }\n        }\n      }\n\n      // Draw mouse connections\n      if (isHovering) {\n        particles.forEach(particle => {\n          const dx = mouseRef.current.x - particle.x;\n          const dy = mouseRef.current.y - particle.y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n\n          if (distance < mouseRadius) {\n            const opacity = (1 - distance / mouseRadius) * 0.5;\n            ctx.beginPath();\n            ctx.moveTo(particle.x, particle.y);\n            ctx.lineTo(mouseRef.current.x, mouseRef.current.y);\n            ctx.strokeStyle = `rgba(118, 75, 162, ${opacity})`;\n            ctx.lineWidth = 2;\n            ctx.stroke();\n          }\n        });\n\n        // Draw mouse node\n        ctx.beginPath();\n        ctx.arc(mouseRef.current.x, mouseRef.current.y, 5, 0, Math.PI * 2);\n        ctx.fillStyle = 'rgba(118, 75, 162, 0.8)';\n        ctx.fill();\n        ctx.shadowColor = '#764ba2';\n        ctx.shadowBlur = 15;\n        ctx.fill();\n        ctx.shadowBlur = 0;\n      }\n\n      animationRef.current = requestAnimationFrame(animate);\n    };\n\n    animate();\n\n    // Mouse event handlers\n    const handleMouseMove = (e) => {\n      const rect = canvas.getBoundingClientRect();\n      mouseRef.current.x = e.clientX - rect.left;\n      mouseRef.current.y = e.clientY - rect.top;\n    };\n\n    const handleMouseEnter = () => setIsHovering(true);\n    const handleMouseLeave = () => setIsHovering(false);\n\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('mouseenter', handleMouseEnter);\n    canvas.addEventListener('mouseleave', handleMouseLeave);\n\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('mouseenter', handleMouseEnter);\n      canvas.removeEventListener('mouseleave', handleMouseLeave);\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [isHovering]);\n\n  return (\n    <div className=\"particle-network\">\n      <canvas ref={canvasRef} className=\"particle-canvas\" />\n      <div className=\"network-overlay\">\n        <div className=\"network-stats\">\n          <div className=\"stat-item\">\n            <span className=\"stat-value\">50</span>\n            <span className=\"stat-label\">Nodes</span>\n          </div>\n          <div className=\"stat-item\">\n            <span className=\"stat-value\">∞</span>\n            <span className=\"stat-label\">Connections</span>\n          </div>\n        </div>\n        <div className=\"network-info\">\n          <p>Interactive Neural Network</p>\n          <small>Hover to interact</small>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ParticleNetwork; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}