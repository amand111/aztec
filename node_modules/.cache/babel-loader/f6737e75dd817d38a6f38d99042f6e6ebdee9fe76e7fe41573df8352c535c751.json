{"ast":null,"code":"var _jsxFileName = \"/Users/aman/Developer/aztec/src/components/ParticleNetwork.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport './ParticleNetwork.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticleNetwork = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const animationRef = useRef(null);\n  const mouseRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const [isHovering, setIsHovering] = useState(false);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Set canvas size\n    const resizeCanvas = () => {\n      canvas.width = canvas.offsetWidth * window.devicePixelRatio;\n      canvas.height = canvas.offsetHeight * window.devicePixelRatio;\n      ctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n    };\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n\n    // Particle system\n    const particles = [];\n    const particleCount = 60;\n    const maxDistance = 150;\n    const mouseRadius = 120;\n    class Particle {\n      constructor() {\n        this.x = Math.random() * canvas.offsetWidth;\n        this.y = Math.random() * canvas.offsetHeight;\n        this.vx = (Math.random() - 0.5) * 0.8;\n        this.vy = (Math.random() - 0.5) * 0.8;\n        this.radius = Math.random() * 3 + 1;\n        this.originalRadius = this.radius;\n        this.opacity = Math.random() * 0.6 + 0.4;\n        this.hue = Math.random() * 60 + 200; // Blue to purple range\n      }\n      update() {\n        this.x += this.vx;\n        this.y += this.vy;\n\n        // Bounce off edges with some randomness\n        if (this.x < 0 || this.x > canvas.offsetWidth) {\n          this.vx *= -0.8;\n          this.vx += (Math.random() - 0.5) * 0.2;\n        }\n        if (this.y < 0 || this.y > canvas.offsetHeight) {\n          this.vy *= -0.8;\n          this.vy += (Math.random() - 0.5) * 0.2;\n        }\n\n        // Keep particles in bounds\n        this.x = Math.max(0, Math.min(canvas.offsetWidth, this.x));\n        this.y = Math.max(0, Math.min(canvas.offsetHeight, this.y));\n\n        // Mouse interaction\n        const dx = mouseRef.current.x - this.x;\n        const dy = mouseRef.current.y - this.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        if (distance < mouseRadius && isHovering) {\n          // Attract to mouse with varying force\n          const force = (mouseRadius - distance) / mouseRadius;\n          this.vx += dx / distance * force * 0.02;\n          this.vy += dy / distance * force * 0.02;\n          this.radius = this.originalRadius * (1 + force * 0.5);\n          this.opacity = Math.min(1, this.opacity + force * 0.3);\n        } else {\n          this.radius = this.originalRadius;\n          this.opacity = Math.max(0.4, this.opacity - 0.01);\n        }\n\n        // Add some drift\n        this.vx += (Math.random() - 0.5) * 0.01;\n        this.vy += (Math.random() - 0.5) * 0.01;\n\n        // Damping\n        this.vx *= 0.995;\n        this.vy *= 0.995;\n      }\n      draw() {\n        // Main particle\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n        ctx.fillStyle = `hsla(${this.hue}, 70%, 60%, ${this.opacity})`;\n        ctx.fill();\n\n        // Glow effect\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.radius * 2, 0, Math.PI * 2);\n        ctx.fillStyle = `hsla(${this.hue}, 70%, 60%, ${this.opacity * 0.1})`;\n        ctx.fill();\n      }\n    }\n\n    // Initialize particles\n    for (let i = 0; i < particleCount; i++) {\n      particles.push(new Particle());\n    }\n\n    // Animation loop\n    const animate = () => {\n      // Create trailing effect\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\n      ctx.fillRect(0, 0, canvas.offsetWidth, canvas.offsetHeight);\n\n      // Update and draw particles\n      particles.forEach(particle => {\n        particle.update();\n        particle.draw();\n      });\n\n      // Draw connections\n      for (let i = 0; i < particles.length; i++) {\n        for (let j = i + 1; j < particles.length; j++) {\n          const dx = particles[i].x - particles[j].x;\n          const dy = particles[i].y - particles[j].y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          if (distance < maxDistance) {\n            const opacity = (1 - distance / maxDistance) * 0.4;\n            const gradient = ctx.createLinearGradient(particles[i].x, particles[i].y, particles[j].x, particles[j].y);\n            gradient.addColorStop(0, `hsla(${particles[i].hue}, 70%, 60%, ${opacity})`);\n            gradient.addColorStop(1, `hsla(${particles[j].hue}, 70%, 60%, ${opacity})`);\n            ctx.beginPath();\n            ctx.moveTo(particles[i].x, particles[i].y);\n            ctx.lineTo(particles[j].x, particles[j].y);\n            ctx.strokeStyle = gradient;\n            ctx.lineWidth = 1;\n            ctx.stroke();\n          }\n        }\n      }\n\n      // Draw mouse connections\n      if (isHovering) {\n        particles.forEach(particle => {\n          const dx = mouseRef.current.x - particle.x;\n          const dy = mouseRef.current.y - particle.y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          if (distance < mouseRadius) {\n            const opacity = (1 - distance / mouseRadius) * 0.6;\n            ctx.beginPath();\n            ctx.moveTo(particle.x, particle.y);\n            ctx.lineTo(mouseRef.current.x, mouseRef.current.y);\n            ctx.strokeStyle = `hsla(280, 70%, 60%, ${opacity})`;\n            ctx.lineWidth = 2;\n            ctx.stroke();\n          }\n        });\n\n        // Draw mouse node with pulsing effect\n        const time = Date.now() * 0.005;\n        const pulseRadius = 8 + Math.sin(time) * 3;\n        ctx.beginPath();\n        ctx.arc(mouseRef.current.x, mouseRef.current.y, pulseRadius, 0, Math.PI * 2);\n        ctx.fillStyle = 'hsla(280, 70%, 60%, 0.8)';\n        ctx.fill();\n\n        // Outer glow\n        ctx.beginPath();\n        ctx.arc(mouseRef.current.x, mouseRef.current.y, pulseRadius * 2, 0, Math.PI * 2);\n        ctx.fillStyle = 'hsla(280, 70%, 60%, 0.2)';\n        ctx.fill();\n      }\n      animationRef.current = requestAnimationFrame(animate);\n    };\n    animate();\n\n    // Mouse event handlers\n    const handleMouseMove = e => {\n      const rect = canvas.getBoundingClientRect();\n      mouseRef.current.x = e.clientX - rect.left;\n      mouseRef.current.y = e.clientY - rect.top;\n    };\n    const handleMouseEnter = () => setIsHovering(true);\n    const handleMouseLeave = () => setIsHovering(false);\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('mouseenter', handleMouseEnter);\n    canvas.addEventListener('mouseleave', handleMouseLeave);\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('mouseenter', handleMouseEnter);\n      canvas.removeEventListener('mouseleave', handleMouseLeave);\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [isHovering]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"particle-network\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"particle-canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n_s(ParticleNetwork, \"dRmvbZR+xEnZ2DDwQtwUUp/1Bcs=\");\n_c = ParticleNetwork;\nexport default ParticleNetwork;\nvar _c;\n$RefreshReg$(_c, \"ParticleNetwork\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","ParticleNetwork","_s","canvasRef","animationRef","mouseRef","x","y","isHovering","setIsHovering","canvas","current","ctx","getContext","resizeCanvas","width","offsetWidth","window","devicePixelRatio","height","offsetHeight","scale","addEventListener","particles","particleCount","maxDistance","mouseRadius","Particle","constructor","Math","random","vx","vy","radius","originalRadius","opacity","hue","update","max","min","dx","dy","distance","sqrt","force","draw","beginPath","arc","PI","fillStyle","fill","i","push","animate","fillRect","forEach","particle","length","j","gradient","createLinearGradient","addColorStop","moveTo","lineTo","strokeStyle","lineWidth","stroke","time","Date","now","pulseRadius","sin","requestAnimationFrame","handleMouseMove","e","rect","getBoundingClientRect","clientX","left","clientY","top","handleMouseEnter","handleMouseLeave","removeEventListener","cancelAnimationFrame","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aman/Developer/aztec/src/components/ParticleNetwork.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport './ParticleNetwork.css';\n\nconst ParticleNetwork = () => {\n  const canvasRef = useRef(null);\n  const animationRef = useRef(null);\n  const mouseRef = useRef({ x: 0, y: 0 });\n  const [isHovering, setIsHovering] = useState(false);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    \n    // Set canvas size\n    const resizeCanvas = () => {\n      canvas.width = canvas.offsetWidth * window.devicePixelRatio;\n      canvas.height = canvas.offsetHeight * window.devicePixelRatio;\n      ctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n    };\n    \n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n\n    // Particle system\n    const particles = [];\n    const particleCount = 60;\n    const maxDistance = 150;\n    const mouseRadius = 120;\n\n    class Particle {\n      constructor() {\n        this.x = Math.random() * canvas.offsetWidth;\n        this.y = Math.random() * canvas.offsetHeight;\n        this.vx = (Math.random() - 0.5) * 0.8;\n        this.vy = (Math.random() - 0.5) * 0.8;\n        this.radius = Math.random() * 3 + 1;\n        this.originalRadius = this.radius;\n        this.opacity = Math.random() * 0.6 + 0.4;\n        this.hue = Math.random() * 60 + 200; // Blue to purple range\n      }\n\n      update() {\n        this.x += this.vx;\n        this.y += this.vy;\n\n        // Bounce off edges with some randomness\n        if (this.x < 0 || this.x > canvas.offsetWidth) {\n          this.vx *= -0.8;\n          this.vx += (Math.random() - 0.5) * 0.2;\n        }\n        if (this.y < 0 || this.y > canvas.offsetHeight) {\n          this.vy *= -0.8;\n          this.vy += (Math.random() - 0.5) * 0.2;\n        }\n\n        // Keep particles in bounds\n        this.x = Math.max(0, Math.min(canvas.offsetWidth, this.x));\n        this.y = Math.max(0, Math.min(canvas.offsetHeight, this.y));\n\n        // Mouse interaction\n        const dx = mouseRef.current.x - this.x;\n        const dy = mouseRef.current.y - this.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n\n        if (distance < mouseRadius && isHovering) {\n          // Attract to mouse with varying force\n          const force = (mouseRadius - distance) / mouseRadius;\n          this.vx += (dx / distance) * force * 0.02;\n          this.vy += (dy / distance) * force * 0.02;\n          this.radius = this.originalRadius * (1 + force * 0.5);\n          this.opacity = Math.min(1, this.opacity + force * 0.3);\n        } else {\n          this.radius = this.originalRadius;\n          this.opacity = Math.max(0.4, this.opacity - 0.01);\n        }\n\n        // Add some drift\n        this.vx += (Math.random() - 0.5) * 0.01;\n        this.vy += (Math.random() - 0.5) * 0.01;\n\n        // Damping\n        this.vx *= 0.995;\n        this.vy *= 0.995;\n      }\n\n      draw() {\n        // Main particle\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n        ctx.fillStyle = `hsla(${this.hue}, 70%, 60%, ${this.opacity})`;\n        ctx.fill();\n\n        // Glow effect\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.radius * 2, 0, Math.PI * 2);\n        ctx.fillStyle = `hsla(${this.hue}, 70%, 60%, ${this.opacity * 0.1})`;\n        ctx.fill();\n      }\n    }\n\n    // Initialize particles\n    for (let i = 0; i < particleCount; i++) {\n      particles.push(new Particle());\n    }\n\n    // Animation loop\n    const animate = () => {\n      // Create trailing effect\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\n      ctx.fillRect(0, 0, canvas.offsetWidth, canvas.offsetHeight);\n\n      // Update and draw particles\n      particles.forEach(particle => {\n        particle.update();\n        particle.draw();\n      });\n\n      // Draw connections\n      for (let i = 0; i < particles.length; i++) {\n        for (let j = i + 1; j < particles.length; j++) {\n          const dx = particles[i].x - particles[j].x;\n          const dy = particles[i].y - particles[j].y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n\n          if (distance < maxDistance) {\n            const opacity = (1 - distance / maxDistance) * 0.4;\n            const gradient = ctx.createLinearGradient(\n              particles[i].x, particles[i].y,\n              particles[j].x, particles[j].y\n            );\n            gradient.addColorStop(0, `hsla(${particles[i].hue}, 70%, 60%, ${opacity})`);\n            gradient.addColorStop(1, `hsla(${particles[j].hue}, 70%, 60%, ${opacity})`);\n            \n            ctx.beginPath();\n            ctx.moveTo(particles[i].x, particles[i].y);\n            ctx.lineTo(particles[j].x, particles[j].y);\n            ctx.strokeStyle = gradient;\n            ctx.lineWidth = 1;\n            ctx.stroke();\n          }\n        }\n      }\n\n      // Draw mouse connections\n      if (isHovering) {\n        particles.forEach(particle => {\n          const dx = mouseRef.current.x - particle.x;\n          const dy = mouseRef.current.y - particle.y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n\n          if (distance < mouseRadius) {\n            const opacity = (1 - distance / mouseRadius) * 0.6;\n            ctx.beginPath();\n            ctx.moveTo(particle.x, particle.y);\n            ctx.lineTo(mouseRef.current.x, mouseRef.current.y);\n            ctx.strokeStyle = `hsla(280, 70%, 60%, ${opacity})`;\n            ctx.lineWidth = 2;\n            ctx.stroke();\n          }\n        });\n\n        // Draw mouse node with pulsing effect\n        const time = Date.now() * 0.005;\n        const pulseRadius = 8 + Math.sin(time) * 3;\n        ctx.beginPath();\n        ctx.arc(mouseRef.current.x, mouseRef.current.y, pulseRadius, 0, Math.PI * 2);\n        ctx.fillStyle = 'hsla(280, 70%, 60%, 0.8)';\n        ctx.fill();\n        \n        // Outer glow\n        ctx.beginPath();\n        ctx.arc(mouseRef.current.x, mouseRef.current.y, pulseRadius * 2, 0, Math.PI * 2);\n        ctx.fillStyle = 'hsla(280, 70%, 60%, 0.2)';\n        ctx.fill();\n      }\n\n      animationRef.current = requestAnimationFrame(animate);\n    };\n\n    animate();\n\n    // Mouse event handlers\n    const handleMouseMove = (e) => {\n      const rect = canvas.getBoundingClientRect();\n      mouseRef.current.x = e.clientX - rect.left;\n      mouseRef.current.y = e.clientY - rect.top;\n    };\n\n    const handleMouseEnter = () => setIsHovering(true);\n    const handleMouseLeave = () => setIsHovering(false);\n\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('mouseenter', handleMouseEnter);\n    canvas.addEventListener('mouseleave', handleMouseLeave);\n\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('mouseenter', handleMouseEnter);\n      canvas.removeEventListener('mouseleave', handleMouseLeave);\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [isHovering]);\n\n  return (\n    <div className=\"particle-network\">\n      <canvas ref={canvasRef} className=\"particle-canvas\" />\n    </div>\n  );\n};\n\nexport default ParticleNetwork; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}